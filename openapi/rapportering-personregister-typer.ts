/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/personstatus": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Hent personstatus
         * @description Hent personstatus for en dagpengebruker
         */
        get: operations["get-personstatus"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/hentPersonId": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Hent ID til en person
         * @description Hent ID til en person basert på ident
         */
        post: operations["post-hentPersonId"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/hentIdent": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Hent ident til en person
         * @description Hent ident til en person basert på ID
         */
        post: operations["post-hentIdent"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/arbeidssokerperioder/{personId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Hent arbeidssøkerperioder for en person
         * @description Hent alle arbeidssøkerperioder for en person basert på personId
         */
        get: operations["get-arbeidssokerperioder"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        IdentBody: {
            ident: string;
        };
        PersonIdBody: {
            personId: number;
        };
        PersonStatus: {
            ident: string;
            status: components["schemas"]["Status"];
            overtattBekreftelse: boolean;
            ansvarligSystem?: components["schemas"]["AnsvarligSystem"];
        };
        /** @enum {string} */
        Status: "DAGPENGERBRUKER" | "IKKE_DAGPENGERBRUKER";
        /** @enum {string} */
        AnsvarligSystem: "ARENA" | "DP";
        Arbeidssokerperiode: {
            /** @description Unik ID for arbeidssøkerperioden */
            periodeId: string;
            /** @description Ident til personen arbeidssøkerperioden tilhører */
            ident: string;
            /**
             * Format: date-time
             * @description Startdato for arbeidssøkerperioden
             */
            startDato: string;
            /**
             * Format: date-time
             * @description Sluttdato for arbeidssøkerperioden, kan være null hvis perioden er aktiv
             */
            sluttDato?: string;
            /**
             * @description Status for arbeidssøkerperioden
             * @enum {string}
             */
            status: "Startet" | "Avsluttet";
        };
        /** @description Implementasjon av Problem Details for HTTP APIs [RFC 7807](https://datatracker.ietf.org/doc/html/rfc7807) */
        Problem: {
            /**
             * Format: uri
             * @description URI som identifiserer problemet
             * @default about:blank
             */
            type: string;
            /** @description En kort oppsummering av problemet */
            title?: string;
            /** @description HTTP status */
            status?: number;
            /** @description Forklaring av problemet */
            detail?: string;
            /**
             * Format: uri
             * @description Hvor feilen oppstod
             */
            instance?: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    "get-personstatus": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PersonStatus"];
                };
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    "post-hentPersonId": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["IdentBody"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PersonIdBody"];
                };
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    "post-hentIdent": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["PersonIdBody"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["IdentBody"];
                };
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    "get-arbeidssokerperioder": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description personId til personen du vil hente arbeidssøkerperioder for */
                personId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Arbeidssokerperiode"][];
                };
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
}
